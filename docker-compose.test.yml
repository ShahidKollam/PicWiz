# docker-compose.test.yml

version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb-test
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-test
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
  
  image-upload-service:
    build:
      context: ./services/image-upload-service
      dockerfile: Dockerfile.upload-service
    container_name: image-upload-service-test
    environment:
      MONGO_URI: mongodb://mongodb:27017/imageprocessor-test
      RABBITMQ_URI: amqp://rabbitmq
      SHARED_STORAGE_PATH: /app/images
    networks:
      - test-network
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./services/image-upload-service:/usr/src/app
      - node_modules_image_upload_test:/usr/src/app/node_modules
    command: npm start
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  test-runner:
    build:
      context: ./services/image-upload-service
      dockerfile: Dockerfile.test
    container_name: integration-test-runner
    networks:
      - test-network
    depends_on:
      image-upload-service:
        condition: service_healthy
    volumes:
      - ./services/image-upload-service:/usr/src/app
      - node_modules_image_upload_test:/usr/src/app/node_modules
    command: npm test

volumes:
  node_modules_image_upload_test:

networks:
  test-network:
    driver: bridge